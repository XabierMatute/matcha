server {
    listen 80;

    # Servir archivos estáticos directamente desde Nginx
    location /static/ {
        root /usr/share/nginx/html;  # Los archivos estáticos deben estar en /usr/share/nginx/html/static/
        try_files $uri $uri/ =404;  # Si el archivo no se encuentra, muestra un 404
    }

    # Si tienes archivos HTML u otros recursos estáticos en la raíz, los puedes servir también
    location / {
        try_files $uri $uri/ @flask;  # Intenta servir el archivo estático, si no, pasa la solicitud a Flask
    }

    # Proxy todas las demás solicitudes a Flask
    location @flask {
        proxy_pass http://flask_app:5000;  # Redirige las solicitudes a la aplicación Flask (asegúrate de que 'flask_app' sea el nombre correcto del servicio en docker-compose)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 300;  # Tiempo de espera para la lectura de proxy
    }

    # Manejo de error 404
    error_page 404 /404.html;
    location = /404.html {
        root /usr/share/nginx/html;  # Cambia esto si tienes una página 404 personalizada
    }

    # Manejo de errores 500, 502, 503, 504
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;  # Cambia esto si tienes una página de error personalizada
    }

    # Habilitar registros de errores en modo depuración
    error_log /var/log/nginx/error.log debug;
}



